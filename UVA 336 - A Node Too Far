#include <bits/stdc++.h>
using namespace std;
#define MAX 105

vector<int>adj[MAX];
int dist[MAX];
bool vis[MAX];
queue<int>q;

int BFS(int u,int d){
    if(d==0) return 1;
    while(!q.empty()) q.pop();
    memset(vis,0,sizeof(vis));

    dist[u]=0;
    vis[u]=1;
    q.push(u);
    int COUNT=1;

    while(!q.empty()){
        int v=q.front();
        q.pop();
        if(dist[v]==d) continue;

        for(int i=0;i<adj[v].size();i++){
            int w=adj[v][i];
            if(vis[w]==1) continue;
            vis[w]=1;
            dist[w]=dist[v]+1;
            q.push(w);
            COUNT++;
        }
    }
    return COUNT;
}

map<int,int>Map;

int main(){
    int m,a,b,cs=0;

    while(scanf("%d",&m)==1 && m){
        Map.clear();
        int n=0;

        for(int i=1;i<=m;i++){
            scanf("%d %d",&a,&b);
            if(!Map.count(a)) {Map[a]=++n; adj[n].clear();}
            if(!Map.count(b)) {Map[b]=++n; adj[n].clear();}
            adj[Map[a]].push_back(Map[b]);
            adj[Map[b]].push_back(Map[a]);
        }

        int start,dist,ans;
        while(scanf("%d %d",&start,&dist)==2 && (start || dist)){
            if(!Map.count(start)) ans=n;
            else ans=n-BFS(Map[start],dist);
            printf("Case %d: %d nodes not reachable from node %d with TTL = %d.\n",++cs,ans,start,dist);
        }
    }
}
